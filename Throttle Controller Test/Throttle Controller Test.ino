/****************************************************************************** 
MCP4725 Example Waveform Sketch
Joel Bartlett
SparkFun Electronics
Sept. 11, 2014
https://github.com/sparkfun/MCP4725_Breakout

This sketch takes data from a lookup table to provide 
waveforms to be generated by the MCP4725 DAC. 

Development environment specifics:
Arduino 1.0+
Hardware Version V14

This code is beerware; if you see me (or any other SparkFun employee) at the local, 
and you've found our code helpful, please buy us a round!

Distributed as-is; no warranty is given. 

This code builds off the sketch written by Mark VandeWettering, which can be found here:
http://brainwagon.org/2011/02/24/arduino-mcp4725-breakout-board/
*/

#include <Wire.h>//Include the Wire library to talk I2C

//This is the I2C Address of the MCP4725, by default (A0 pulled to GND).
//Please note that this breakout is for the MCP4725A0. 
#define MCP4725_ADDR 0x60   
//For devices with A0 pulled HIGH, use 0x61

//Sinewave Tables were generated using this calculator:
//http://www.daycounter.com/Calculators/Sine-Generator-Calculator.phtml


int lookup = 0;//varaible for navigating through the tables

int pedal_5_0v = A2;
int pedal_3_3v = A3;
int brake = 2;

int brakeState = 0;

int x = 0;

int value5_0 = 0;
int value3_3 = 0;

int scaled5_0 = 0;
int scaled3_3 = 0;


int sintab2[255] = 
{
0,
0,
0,
60,
75,
90,
105,
120,
135,
150,
165,
180,
195,
210,
225,
240,
255,
270,
285,
300,
315,
330,
345,
360,
375,
390,
405,
420,
435,
450,
465,
480,
495,
510,
525,
540,
555,
570,
585,
600,
615,
630,
645,
660,
675,
690,
705,
720,
735,
750,
765,
780,
795,
810,
825,
840,
855,
870,
885,
900,
915,
930,
945,
960,
975,
990,
1005,
1020,
1035,
1050,
1065,
1080,
1095,
1110,
1125,
1140,
1155,
1170,
1185,
1200,
1215,
1230,
1245,
1260,
1275,
1290,
1305,
1320,
1335,
1350,
1365,
1380,
1395,
1410,
1425,
1440,
1455,
1470,
1485,
1500,
1515,
1530,
1545,
1560,
1575,
1590,
1605,
1620,
1635,
1650,
1665,
1680,
1695,
1710,
1725,
1740,
1755,
1770,
1785,
1800,
1815,
1830,
1845,
1860,
1875,
1890,
1905,
1920,
1935,
1950,
1965,
1980,
1995,
2010,
2025,
2040,
2055,
2070,
2085,
2100,
2115,
2130,
2145,
2160,
2175,
2190,
2205,
2220,
2235,
2250,
2265,
2280,
2295,
2310,
2325,
2340,
2355,
2370,
2385,
2400,
2415,
2430,
2445,
2460,
2475,
2490,
2505,
2520,
2535,
2550,
2565,
2580,
2595,
2610,
2625,
2640,
2655,
2670,
2685,
2700,
2715,
2730,
2745,
2760,
2775,
2790,
2805,
2820,
2835,
2850,
2865,
2880,
2895,
2910,
2925,
2940,
2955,
2970,
2985,
3000,
3015,
3030,
3045,
3060,
3075,
3090,
3105,
3120,
3135,
3150,
3165,
3180,
3195,
3210,
3225,
3240,
3255,
3270,
3285,
3300,
3315,
3330,
3345,
3360,
3375,
3390,
3405,
3420,
3435,
3450,
3465,
3480,
3495,
3510,
3525,
3540,
3555,
3570,
3585,
3600,
3615,
3630,
3645,
3660,
3675,
3690,
3705,
3720,
3735,
3750,
3765,
3780,
3795,
3810,
3825


};


void setup()
{
  Wire.begin();
  Serial.begin(9600);
  pinMode(brake, INPUT);
  
 
}
//---------------------------------------------------
void loop()
{
  brakeState = digitalRead(brake);
  value5_0 = analogRead(pedal_5_0v);
  value3_3 = analogRead(pedal_3_3v);

  
  scaled5_0 = map(value5_0, 0, 1023, 0, 255);
  scaled3_3 = map(value3_3, 0, 675, 0, 255);
  
  Wire.beginTransmission(MCP4725_ADDR);
  Wire.write(64);                     // cmd to update the DAC
  Wire.write(sintab2[lookup] >> 4);        // the 8 most significant bits...
  Wire.write((sintab2[lookup] & 15) << 4); // the 4 least significant bits...
  Wire.endTransmission();
  
 
  if ((abs(scaled3_3 - scaled5_0) < 25 )){
    
  lookup  = scaled5_0;
  Serial.println("GOOD");
  Serial.println(value5_0);
  }

  if ((abs(scaled3_3 - scaled5_0) > 50 )){
    
  lookup  = 0;
  Serial.println("BAD");
  }

  if ((value5_0 > 180) && (brakeState == 1)){
    
    while(value5_0 > 150){
      Serial.println("fault");
      Serial.println(value5_0);
      value5_0 = analogRead(pedal_5_0v);
      lookup  = 0;
      Wire.beginTransmission(MCP4725_ADDR);
      Wire.write(64);                     // cmd to update the DAC
      Wire.write(sintab2[lookup] >> 4);        // the 8 most significant bits...
      Wire.write((sintab2[lookup] & 15) << 4); // the 4 least significant bits...
      Wire.endTransmission();
  
    }
   
  }
  
  
}
